name: release

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_path: target/x86_64-pc-windows-msvc/release/bip39.exe
            artifact_name: bip39_windows
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_path: target/x86_64-unknown-linux-gnu/release/bip39
            artifact_name: bip39_linux
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_path: target/x86_64-apple-darwin/release/bip39
            artifact_name: bip39_macos_intel
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_path: target/aarch64-apple-darwin/release/bip39
            artifact_name: bip39_macos_arm
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Cache Cargo Registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo Build
        uses: actions/cache@v4
        with:
          path: |
            target
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}

      - name: Build Binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Run Tests
        run: cargo test --verbose

      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}
          if-no-files-found: warn
          compression-level: 6
          overwrite: true

  create-universal-macos:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Download Intel macOS binary
        uses: actions/download-artifact@v4
        with:
          name: bip39_macos_intel
          path: ./intel

      - name: Download ARM macOS binary
        uses: actions/download-artifact@v4
        with:
          name: bip39_macos_arm
          path: ./arm

      - name: Check if both binaries exist
        id: check_binaries
        run: |
          if [[ -f "intel/bip39" && -f "arm/bip39" ]]; then
            echo "found=true" >> $GITHUB_OUTPUT
          else
            echo "found=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Universal Binary
        if: steps.check_binaries.outputs.found == 'true'
        run: |
          lipo -create \
            intel/bip39 \
            arm/bip39 \
            -output bip39_universal

      - name: Upload Universal Binary Artifact
        if: steps.check_binaries.outputs.found == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: bip39_macos_universal
          path: bip39_universal
          compression-level: 6
          overwrite: true